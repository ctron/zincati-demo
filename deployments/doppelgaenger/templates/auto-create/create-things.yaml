kind: Job
apiVersion: batch/v1
metadata:
  name: auto-create-things
  annotations:
    argocd.argoproj.io/hook: Sync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
    argocd.argoproj.io/sync-wave: "0"
    helm.sh/hook-weight: "10"
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
spec:
  backoffLimit: 1000
  completions: 1
  parallelism: 1
  ttlSecondsAfterFinished: 600
  template:
    spec:

      restartPolicy: OnFailure

      volumes:
        - name: scripts
          configMap:
            name: zincati-scripts

      containers:
        - name: post-install
          image: "ghcr.io/ctron/batteries:1"
          imagePullPolicy: IfNotPresent

          volumeMounts:
            - mountPath: /etc/zincati-scripts
              name: scripts

          env:
            - name: KEYCLOAK_URL
              value: "https://sso-tls.{{ .Release.Namespace }}.svc.cluster.local:8443"

            - name: CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_ID
            - name: CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_SECRET

            - name: KCADM_PATH
              value: "/opt/keycloak/bin/kcadm.sh"

            - name: CUSTOM_TRUSTSTORE
              value: "/var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt"

            - name: REALM
              value: doppelgaenger

            - name: API_URL
              value: "https://doppelgaenger-backend.{{ .Release.Namespace }}.svc.cluster.local:443"

          command:
            - bash
            - -exc
            - |
              http --version

              HTTP_ARGS="--check-status --ignore-stdin --verify ${CUSTOM_TRUSTSTORE}"

              HTTP_OPTS="${HTTP_ARGS} -A bearer -a $(http ${HTTP_ARGS} --form POST ${KEYCLOAK_URL}/realms/${REALM}/protocol/openid-connect/token grant_type=client_credentials client_id=${CLIENT_ID} client_secret=${CLIENT_SECRET} | jq -r .access_token)"

              # cleanup old

              http $HTTP_OPTS DELETE ${API_URL}/api/v1alpha1/things/test1%2Fzincati || true

              # create

              http $HTTP_OPTS POST ${API_URL}/api/v1alpha1/things metadata:='{"name": "/", "application": "default"}' || true
              http $HTTP_OPTS POST ${API_URL}/api/v1alpha1/things metadata:='{"name": "/devices", "application": "default"}' || true
              http $HTTP_OPTS POST ${API_URL}/api/v1alpha1/things metadata:='{"name": "test1", "application": "default"}' || true
              http $HTTP_OPTS POST ${API_URL}/api/v1alpha1/things metadata:='{"name": "test1/updater", "application": "default"}' || true
              http $HTTP_OPTS POST ${API_URL}/api/v1alpha1/things metadata:='{"name": "test1/ostree", "application": "default"}' || true

              # we create the references manually for now

              # back references

              http $HTTP_OPTS PUT ${API_URL}/api/v1alpha1/things/default/things/%2Fdevices/reportedStates '$parent:="/"'
              http $HTTP_OPTS PUT ${API_URL}/api/v1alpha1/things/default/things/test1/reportedStates '$parent:="/devices"'
              http $HTTP_OPTS PUT ${API_URL}/api/v1alpha1/things/default/things/test1%2Fupdater/syntheticStates/%24parent 'javaScript="test1"'
              http $HTTP_OPTS PUT ${API_URL}/api/v1alpha1/things/default/things/test1%2Fostree/syntheticStates/%24parent 'javaScript="test1"'

              # forward references

              http $HTTP_OPTS PUT ${API_URL}/api/v1alpha1/things/default/things/%2F/reportedStates '$children:={"/devices": {}}'
              http $HTTP_OPTS PUT ${API_URL}/api/v1alpha1/things/default/things/%2Fdevices/reportedStates '$children:={"test1": {}}'
              http $HTTP_OPTS PUT ${API_URL}/api/v1alpha1/things/default/things/test1/reportedStates '$children:={"test1/updater": {}, "test1/ostree": {}}'

              # create scripts
              http $HTTP_OPTS PUT ${API_URL}/api/v1alpha1/things/default/things/test1%2Fostree/syntheticStates/stagedDeployment 'javaScript=@/etc/zincati-scripts/syn_booted.js'
              http $HTTP_OPTS PUT ${API_URL}/api/v1alpha1/things/default/things/test1%2Fostree/syntheticStates/stagedDeployment 'javaScript=@/etc/zincati-scripts/syn_staged.js'
